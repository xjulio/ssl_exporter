apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ template "namespace" . }}
  labels:
    owner: "helm"
    {{- include "labels" . | nindent 4 }}
  annotations: {{- toYaml $.Values.annotations | nindent 4 }}
spec:
  replicas: {{ int $.Values.replicaCount }}
  selector:
    matchLabels: {{- include "matchLabels" $ | nindent 6 }}
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 3
  template:
    metadata:
      labels: {{- include "labels" $ | nindent 8 }}
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds }}
      serviceAccountName: {{ template "serviceAccountName" . }}
      automountServiceAccountToken: true
      nodeSelector: {{- toYaml $.Values.nodeSelector | nindent 8 }}
      tolerations: {{- toYaml $.Values.tolerations | nindent 8 }}
      affinity: {{- toYaml $.Values.affinity | nindent 8 }}
      imagePullSecrets: {{- toYaml $.Values.imagePullSecrets | nindent 8 }}
      volumes: {{- if and (eq $.Values.configMap.enabled false) (eq $.Values.tlsConfigSecret.enabled false) }} [] {{- end }}
{{- if $.Values.configMap.enabled }}
        - name: config
          configMap:
            name: {{ template "fullname" . }}
{{- end }}
{{- if $.Values.tlsConfigSecret.enabled }}
        - name: client-auth
          secret:
            secretName: {{ $.Values.tlsConfigSecret.secretName }}
{{- end }}
      containers:
        - name: ssl-exporter
        {{- if .Values.image.sha }}
          image: "{{ .Values.image.repository }}@{{ .Values.image.sha }}"
        {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if $.Values.resources.enabled }}
          resources: {{ toYaml $.Values.resources.definition | nindent 12 }}
{{- end }}
{{- if $.Values.configMap.enabled }}
          args: ["--config.file=/config/config.yaml"]
{{- end }}
          ports:
            - name: exporter
              containerPort: 9219
{{- if $.Values.probes.enableReadinessProbe }}
          readinessProbe:
            {{- toYaml $.Values.probes.readinessProbe | nindent 12 }}
            httpGet:
              port: exporter
              path: /
{{- end }}
{{- if $.Values.probes.enableLivenessProbe }}
          livenessProbe:
            {{- toYaml $.Values.probes.livenessProbe | nindent 12 }}
            httpGet:
              port: exporter
              path: /
{{- end }}
          volumeMounts: {{- if and (eq $.Values.configMap.enabled false) (eq $.Values.tlsConfigSecret.enabled false) }} [] {{- end }}
{{- if $.Values.configMap.enabled }}
            - name: config
              mountPath: /config
              readOnly: true
{{- end }}
{{- if $.Values.tlsConfigSecret.enabled }}
            - name: client-auth
              mountPath: {{ $.Values.tlsConfigSecret.mountPath }}
              readOnly: true
{{- end }}
{{- if $.Values.securityContext.enabled }}
          securityContext: {{- toYaml $.Values.securityContext.definition | nindent 12 }}
{{- end }}
